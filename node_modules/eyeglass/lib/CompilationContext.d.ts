import Assets from "./assets/Assets";
import { IEyeglass } from "./IEyeglass";
import EyeglassModules from "./modules/EyeglassModules";
import { DeprecateFn } from "./util/deprecator";
import Config, { Config as Conf, Options } from "./util/Options";
import { helpers as sassHelpers, SassImplementation } from "./util/SassImplementation";
export default class CompilationContext implements IEyeglass {
    static VERSION: string;
    deprecate: DeprecateFn;
    options: Conf;
    assets: Assets;
    modules: EyeglassModules;
    private sass;
    constructor(options: Options, deprecatedNodeSassArg?: SassImplementation);
    sassOptions(): Config;
    static helpers(sass: SassImplementation): ReturnType<typeof sassHelpers>;
}
export declare type MutableOptionsProperties = "data" | "file" | "outFile";
export declare type MutableSassOptions = Pick<Options, MutableOptionsProperties>;
export declare class OptionsProxy implements ProxyHandler<Options>, MutableSassOptions {
    static MUTABLE_OPTIONS: Set<string | number | symbol>;
    data?: string;
    file?: string;
    outFile?: string;
    private isMutableProperty;
    has(target: Options, p: PropertyKey): boolean;
    set(_target: Options, prop: PropertyKey, value: any): boolean;
    get(target: Options, prop: PropertyKey): unknown;
    ownKeys(target: Options): Array<PropertyKey>;
}
//# sourceMappingURL=CompilationContext.d.ts.map